(Vpro Vi Vstop Vsign Vbrk Vd
  (pro i idx_s) Vpro_i
    ((d (d sign -) (pro_i "}" ==) if) (d sign +) (pro_i "{" ==) if)
      (brk sign stop (i sign +) pro z)
        (("pro_edge" error) (i stop ==) if) i ((d 0 ==) (pro_i brk ==) and) if) Fz

(Vout Vpc Vmem Vmar Vpro
  ((pro length) 1 -) Vmax
    (pro pc idx_s) Vop
      (0 "{" -1 0  (pc 1 -) pro z) Fmove_pc2
        (0 "}" 1 max (pc 1 +) pro z) Fmove_pc1
          ((pro mar mem (pc 1 +) out bf0) out (pc max ==) if) Fj
            ((j) (move_pc2 Vpc j) (((mem mar idx_a) 0 !=) (op "}" ==) and) if)
                  ((move_pc1 Vpc j) (((mem mar idx_a) 0 ==) (op "{" ==) and) if)
                (((out ((mem mar idx_a) chr) cons)    Vout j) (op "." ==) if)
                  (((mem mar -1 up_p)                   Vmem j) (op "m" ==) if)
                    (((mem mar 1 up_p)                    Vmem j) (op "p" ==) if)
                      (((mar 1 -)                           Vmar j) (op "<" ==) if)
                        (((mar 1 +)                           Vmar j) (op ">" ==) if)) Fbf0

"pppppppp{>pppp{>pp>ppp>ppp>p<<<<m}>p>p>m>>p{<}<m}>>.>mmm.ppppppp..ppp.>>.<m.<.ppp.mmmmmm.mmmmmmmm.>>p.>pp."
  0 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] 0 [] bf0